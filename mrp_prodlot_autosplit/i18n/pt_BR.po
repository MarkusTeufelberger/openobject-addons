# Brazilian Portuguese translation for openobject-addons
# Copyright (c) 2013 Rosetta Contributors and Canonical Ltd 2013
# This file is distributed under the same license as the openobject-addons package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: openobject-addons\n"
"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
"POT-Creation-Date: 2009-11-26 10:28+0000\n"
"PO-Revision-Date: 2013-07-20 12:35+0000\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: Brazilian Portuguese <pt_BR@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Launchpad-Export-Date: 2013-07-22 05:50+0000\n"
"X-Generator: Launchpad (build 16696)\n"

#. module: mrp_prodlot_autosplit
#: field:product.product,unique_production_number:0
msgid "Unique Production Number"
msgstr "Número de produção único"

#. module: mrp_prodlot_autosplit
#: constraint:ir.ui.view:0
msgid "Invalid XML for View Architecture!"
msgstr "Inválido XML para Ver Arquitetura!"

#. module: mrp_prodlot_autosplit
#: model:ir.module.module,description:mrp_prodlot_autosplit.module_meta_information
msgid ""
"Turns production lot tracking numbers into unique per product instance code "
"(serial number).\n"
"    Moreover, it\n"
"    1) adds a new checkbox on the product form to enable or disable this "
"behavior (you should also enable in/out tracking)\n"
"    2) then forbids to perform a move if a move involves more than one "
"product instance\n"
"    3) automagically splits up picking list movements into one movement per "
"product instance\n"
"    4) turns incoming pickings into an editable grid where you can directly "
"type the code\n"
"    of a new production number/code to create and associate to the move (it "
"also checks it\n"
"    doesn't exist yet)\n"
"    \n"
"    Important Note 1: serial numbers are more easily encode using an "
"editable tree grid, including a special field with new serial to be "
"created.\n"
"    However, there is currently a limitation in the OpenObject framework "
"preventing from easily changing non editable trees to editable trees\n"
"    by simple extension. Rather than overwriting all views, we prefer give "
"only one example: the active customied view for easy serial encoding\n"
"    is available using Stock Management > Incoming Products. Looking  that "
"that view definition, the same thing is easily achieved in\n"
"    other picking list, like out going products for instance. However it's "
"not \"on\" by default, you would need to work it out for your case.\n"
"    Meanwhile, we hope Tiny add a third \"merge_attributes\" view extension "
"point to the 3 existing ones: \"before\", \"after\" and \"replace\".\n"
"    It would basically simply merge the attributes given (redefined) in the "
"original view XML and let inner content unchanged.\n"
"    Blueprint is registred here: https://blueprints.launchpad.net/openobject-"
"server/+spec/merge-attributes-view-extension-point\n"
"    \n"
"    Important Note 2: this module doesn't split product bill of materials in "
"MRP since they don't use pickings\n"
"    A good workaround when generating production orders manually one by one "
"is too define several lines of individual products in nomemclatures\n"
"    and produce 1 by 1 (if possible) to make it easier to encode unique "
"prodlot in production orders too.\n"
"    We would also like to extend this module to split automatic production "
"orders (from MRP engine) into several individual production orders in order\n"
"    to make it easy to encode the serial numbers in the production. Let us "
"know if you would like that simple extension to be made.\n"
"    "
msgstr ""
"Acontece muito os números de rastreamento de produção em única instância "
"código do produto por (número de série).\n"
"    Além disso,\n"
"    1) adiciona uma nova caixa de seleção na forma de produto para ativar ou "
"desativar esse comportamento (você também deve habilitar in / out tracking)\n"
"    2) em seguida, proíbe a realizar um movimento, se um movimento envolve "
"mais de uma instância do produto\n"
"    3) automagicamente divide pegando movimentos lista em um movimento por "
"instância do produto\n"
"    4) se transforma sobras de entrada em uma grade editável onde você pode "
"digitar diretamente o código\n"
"    de uma nova produção de número / código para criar e associar ao "
"movimento (que também verifica-lo\n"
"    ainda não existe)\n"
"    \n"
"    Nota Importante 1: Os números de série são mais facilmente codificar "
"usando uma grade de árvore editável, incluindo um campo especial com a nova "
"série a ser criado.\n"
"    No entanto, existe atualmente uma limitação no âmbito OpenObject "
"impedindo de mudar facilmente árvores não editáveis ​​de árvores editáveis\n"
"    por extensão simples. Ao invés de substituir todos os pontos de vista, "
"nós preferimos dar apenas um exemplo: a visão customied ativo para facilitar "
"a codificação de série\n"
"    está disponível usando Gestão de Estoques> Produtos entrada. Procurando "
"que esta definição vista, a mesma coisa pode ser facilmente alcançado em\n"
"    outra lista de picking, como fora indo produtos, por exemplo. No "
"entanto, não é \"on\" por padrão, você precisa trabalhar com isso para o seu "
"caso.\n"
"    Enquanto isso, esperamos minúsculo adicionar um terceiro "
"\"merge_attributes\" ponto de vista de extensão para as três já existentes: "
"\"antes\", \"depois\" e \"substituir\".\n"
"    Seria basicamente simplesmente fundir os atributos dados (redefinido) no "
"original visão XML e deixe conteúdo interno inalterado.\n"
"    Blueprint é registado aqui: https://blueprints.launchpad.net/openobject-"
"server/+spec/merge-attributes-view-extension-point\n"
"    \n"
"    Nota Importante 2: este módulo não divide conta de produtos de materiais "
"em MRP, uma vez que não usam sobras\n"
"    Uma boa alternativa ao gerar ordens de produção manualmente, um por um é "
"também definir várias linhas de produtos individuais nomemclatures\n"
"    e produzir um por um (se possível) para torná-lo mais fácil de codificar "
"prodlot único em ordens de produção também.\n"
"    Nós também gostaríamos de estender este módulo para dividir ordens "
"automáticas de produção (de motor MRP) em várias ordens de produção "
"individuais, a fim\n"
"    para tornar mais fácil para codificar os números de série na produção. "
"Deixe-nos saber se você gostaria que a extensão simples de ser feita.\n"
"    "

#. module: mrp_prodlot_autosplit
#: field:stock.production.lot,last_location_id:0
msgid "Last Location"
msgstr "Última Localização"

#. module: mrp_prodlot_autosplit
#: model:ir.module.module,shortdesc:mrp_prodlot_autosplit.module_meta_information
msgid "Unique serial number management"
msgstr "Gestão único número de série"

#. module: mrp_prodlot_autosplit
#: field:stock.move,new_prodlot_code:0
msgid "Production Tracking Code To Create"
msgstr "Produção Código de Rastreamento Para Criar"

#. module: mrp_prodlot_autosplit
#: view:stock.picking:0
msgid "Stock Moves"
msgstr "MUDANÇA DE ESTOQUE"
