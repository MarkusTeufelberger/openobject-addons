# Spanish translation for openobject-addons
# Copyright (c) 2011 Rosetta Contributors and Canonical Ltd 2011
# This file is distributed under the same license as the openobject-addons package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2011.
#
msgid ""
msgstr ""
"Project-Id-Version: openobject-addons\n"
"Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>\n"
"POT-Creation-Date: 2009-11-26 10:28+0000\n"
"PO-Revision-Date: 2011-02-15 15:14+0000\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: Spanish <es@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Launchpad-Export-Date: 2011-10-28 05:48+0000\n"
"X-Generator: Launchpad (build 14197)\n"

#. module: mrp_prodlot_autosplit
#: field:product.product,unique_production_number:0
msgid "Unique Production Number"
msgstr "Número de lote de producción único (número de serie)"

#. module: mrp_prodlot_autosplit
#: constraint:ir.ui.view:0
msgid "Invalid XML for View Architecture!"
msgstr "¡﻿XML no válido para la definición de la vista!"

#. module: mrp_prodlot_autosplit
#: model:ir.module.module,description:mrp_prodlot_autosplit.module_meta_information
msgid ""
"Turns production lot tracking numbers into unique per product instance code "
"(serial number).\n"
"    Moreover, it\n"
"    1) adds a new checkbox on the product form to enable or disable this "
"behavior (you should also enable in/out tracking)\n"
"    2) then forbids to perform a move if a move involves more than one "
"product instance\n"
"    3) automagically splits up picking list movements into one movement per "
"product instance\n"
"    4) turns incoming pickings into an editable grid where you can directly "
"type the code\n"
"    of a new production number/code to create and associate to the move (it "
"also checks it\n"
"    doesn't exist yet)\n"
"    \n"
"    Important Note 1: serial numbers are more easily encode using an "
"editable tree grid, including a special field with new serial to be "
"created.\n"
"    However, there is currently a limitation in the OpenObject framework "
"preventing from easily changing non editable trees to editable trees\n"
"    by simple extension. Rather than overwriting all views, we prefer give "
"only one example: the active customied view for easy serial encoding\n"
"    is available using Stock Management > Incoming Products. Looking  that "
"that view definition, the same thing is easily achieved in\n"
"    other picking list, like out going products for instance. However it's "
"not \"on\" by default, you would need to work it out for your case.\n"
"    Meanwhile, we hope Tiny add a third \"merge_attributes\" view extension "
"point to the 3 existing ones: \"before\", \"after\" and \"replace\".\n"
"    It would basically simply merge the attributes given (redefined) in the "
"original view XML and let inner content unchanged.\n"
"    Blueprint is registred here: https://blueprints.launchpad.net/openobject-"
"server/+spec/merge-attributes-view-extension-point\n"
"    \n"
"    Important Note 2: this module doesn't split product bill of materials in "
"MRP since they don't use pickings\n"
"    A good workaround when generating production orders manually one by one "
"is too define several lines of individual products in nomemclatures\n"
"    and produce 1 by 1 (if possible) to make it easier to encode unique "
"prodlot in production orders too.\n"
"    We would also like to extend this module to split automatic production "
"orders (from MRP engine) into several individual production orders in order\n"
"    to make it easy to encode the serial numbers in the production. Let us "
"know if you would like that simple extension to be made.\n"
"    "
msgstr ""
"Convierte los números de lote en uno único por producto (número de serie)\n"
"    Más aún,\n"
"    1) Añade una nueva casilla de verificación en el formulario de producto "
"para activar o desactivar esta funcionalidad(debería también activar lotes "
"en entrada/salida\n"
"    2) Prohibe realizar un movimiento si el movimiento requiere más de una "
"instancia de producto\n"
"    3) Automágicamente desglosa la línea de movimientos para varios "
"productos en un único movimiento por cada producto\n"
"    4) Convierte los albaranes de entrada en una tabla editable donde puede "
"directamente escribir el número de serie de un nuevo número de serie para "
"crearlo y asociarlo al movimiento (también verifica que no exista antes)\n"
"\n"
"    Importante Nota 1: Los número de serie se codifican mejor utilizando una "
"tabla editable, que incluye un campo especial con el nuevo número de serie "
"para ser creado. En cualquier caso hay actualmente una limitación en el "
"framework de OpenObject que previene de cambiar fácilmente grids no "
"editables a editables por una simple extensión. En vez de sobreescribir "
"todas las vistas, preferimos dar un único ejemplo: La vista activa "
"modificada para facilitar la codificación de números de serie está "
"disponible utilizando Fabricación / productos entrantes. Buscando esta "
"definción de la vista, esto mismo es fácilmente trasladable a otros "
"albaranes, como por ejemplo los de salida. De todas formas no está activo "
"por defecto, necesitaría trabajar con ello para su caso específico.\n"
"Mientras tanto, esperamos que Tiny añada una tercera vista "
"\"merge_attributes\" a los 3 existentes: \"antes\", \"despues\" y "
"\"reemplazar\". Básicamente permitiría combinar los atributos dados "
"(redefinidos) en la vista origial XML y dejar el contenido sin cambiar.\n"
"La solicitud de mejora está registrada aquí:  "
"https://blueprints.launchpad.net/openobject-server/+spec/merge-attributes-"
"view-extension-point\n"
"\n"
"Importante Nota 2: Este módulo no desglos la lista de materiales en MRP ya "
"que no usa albaranes.\n"
"Una buena aproximación al generar órdenes de fabricación manualmente una por "
"una es definir varias líneas de productos individuales en nomenclaturas y "
"producir uno a uno ( si es posible) para hacer más fácil la codificación de "
"un único número de serie también en las órdenes de producción.\n"
"También queremos extender este módulo para desglosar automáticamente órdenes "
"de producción (desde el motor MRP) en varias órdenes individuales para "
"faciliar la codificación de los números de serie en producción. Haznos saber "
"si te gustaría que abordásemos el desarrollo de esta extensión.\n"
"    "

#. module: mrp_prodlot_autosplit
#: field:stock.production.lot,last_location_id:0
msgid "Last Location"
msgstr "Última ubicación"

#. module: mrp_prodlot_autosplit
#: model:ir.module.module,shortdesc:mrp_prodlot_autosplit.module_meta_information
msgid "Unique serial number management"
msgstr "Gestión de número de serie único"

#. module: mrp_prodlot_autosplit
#: field:stock.move,new_prodlot_code:0
msgid "Production Tracking Code To Create"
msgstr "Número de tracking de producción para crear"

#. module: mrp_prodlot_autosplit
#: view:stock.picking:0
msgid "Stock Moves"
msgstr "Movimientos de stock"
