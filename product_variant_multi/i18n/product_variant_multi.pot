# Translation of OpenERP Server.
# This file contains the translation of the following modules:
#	* product_variant_multi
#
msgid ""
msgstr ""
"Project-Id-Version: OpenERP Server 6.0.2\n"
"Report-Msgid-Bugs-To: support@openerp.com\n"
"POT-Creation-Date: 2011-12-15 12:40+0000\n"
"PO-Revision-Date: 2011-12-15 12:40+0000\n"
"Last-Translator: <>\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: \n"
"Plural-Forms: \n"

#. module: product_variant_multi
#: field:product.variant.dimension.value,price_extra:0
msgid "Sale Price Extra"
msgstr "Sale Price Extra"

#. module: product_variant_multi
#: field:product.template,variant_track_production:0
msgid "Track Production Lots on variants ?"
msgstr "Track Production Lots on variants ?"

#. module: product_variant_multi
#: field:product.variant.dimension.value,active:0
msgid "Active?"
msgstr "Active?"

#. module: product_variant_multi
#: view:product.product:0
#: field:product.product,dimension_value_ids:0
msgid "Dimensions"
msgstr "Dimensions"

#. module: product_variant_multi
#: view:product.product:0
msgid "Lots"
msgstr "Lots"

#. module: product_variant_multi
#: field:product.product,cost_price_extra:0
msgid "Purchase Extra Cost"
msgstr "Purchase Extra Cost"

#. module: product_variant_multi
#: constraint:product.template:0
msgid "Error: The default UOM and the purchase UOM must be in the same category."
msgstr "Error: The default UOM and the purchase UOM must be in the same category."

#. module: product_variant_multi
#: field:product.product,total_weight_net:0
msgid "Net weight"
msgstr "Net weight"

#. module: product_variant_multi
#: help:product.variant.dimension.type,mandatory_dimension:0
msgid "If false, variant products will be created with and without this dimension"
msgstr "If false, variant products will be created with and without this dimension"

#. module: product_variant_multi
#: field:product.variant.dimension.type,allow_custom_value:0
msgid "Allow Custom Value"
msgstr "Allow Custom Value"

#. module: product_variant_multi
#: code:addons/product_variant_multi/product_variant.py:91
#, python-format
msgid "Dimension value can not be removed"
msgstr "Dimension value can not be removed"

#. module: product_variant_multi
#: view:product.template:0
#: field:product.template,variant_ids:0
msgid "Variants"
msgstr "Variants"

#. module: product_variant_multi
#: help:product.variant.dimension.value,active:0
msgid "If false, this value will be not use anymore for generating variant"
msgstr "If false, this value will be not use anymore for generating variant"

#. module: product_variant_multi
#: help:product.product,additional_volume:0
msgid "The additional volume in Kg."
msgstr "The additional volume in Kg."

#. module: product_variant_multi
#: help:product.template,variant_model_name:0
msgid "[_o.dimension_id.name_] will be replaced by the name of the dimension and [_o.option_id.code_] by the code of the option. Example of Variant Model Name : \"[_o.dimension_id.name_] - [_o.option_id.code_]\""
msgstr "[_o.dimension_id.name_] will be replaced by the name of the dimension and [_o.option_id.code_] by the code of the option. Example of Variant Model Name : \"[_o.dimension_id.name_] - [_o.option_id.code_]\""

#. module: product_variant_multi
#: view:product.template:0
msgid "Generate / Update variants ->"
msgstr "Generate / Update variants ->"

#. module: product_variant_multi
#: field:product.template,dimension_type_ids:0
#: view:product.variant.dimension.type:0
msgid "Dimension Types"
msgstr "Dimension Types"

#. module: product_variant_multi
#: field:product.product,total_volume:0
msgid "Volume"
msgstr "Volume"

#. module: product_variant_multi
#: model:ir.model,name:product_variant_multi.model_product_product
msgid "Product"
msgstr "Product"

#. module: product_variant_multi
#: view:product.product:0
msgid "Template Sale Price"
msgstr "Template Sale Price"

#. module: product_variant_multi
#: constraint:product.product:0
msgid "Several dimension values for the same dimension type"
msgstr "Several dimension values for the same dimension type"

#. module: product_variant_multi
#: field:product.variant.dimension.type,description:0
msgid "Description"
msgstr "Description"

#. module: product_variant_multi
#: field:product.template,code_generator:0
msgid "Code Generator"
msgstr "Code Generator"

#. module: product_variant_multi
#: help:product.product,additional_weight:0
msgid "The additional gross weight in Kg."
msgstr "The additional gross weight in Kg."

#. module: product_variant_multi
#: field:product.variant.dimension.value,product_ids:0
msgid "Variant"
msgstr "Variant"

#. module: product_variant_multi
#: view:product.template:0
msgid "Add All Option"
msgstr "Add All Option"

#. module: product_variant_multi
#: field:product.variant.dimension.value,price_margin:0
msgid "Sale Price Margin"
msgstr "Sale Price Margin"

#. module: product_variant_multi
#: help:product.product,total_weight_net:0
msgid "The net weight in Kg."
msgstr "The net weight in Kg."

#. module: product_variant_multi
#: field:product.variant.dimension.type,mandatory_dimension:0
msgid "Mandatory Dimension"
msgstr "Mandatory Dimension"

#. module: product_variant_multi
#: field:product.product,additional_weight_net:0
msgid "Additional Net weight"
msgstr "Additional Net weight"

#. module: product_variant_multi
#: field:product.product,additional_volume:0
msgid "Additional Volume"
msgstr "Additional Volume"

#. module: product_variant_multi
#: code:addons/product_variant_multi/product_variant.py:91
#, python-format
msgid "The value %s is use in the product : %s \n"
" Please remove this products before removing the value\"%(value.option_id.name, product_list)))\n"
"        return super(product_variant_dimension_value, self).unlink(cr, uid, ids, context)\n"
"\n"
"    def _get_dimension_values(self, cr, uid, ids, context={}):\n"
"        return self.pool.get('product.variant.dimension.value').search(cr, uid, [('dimension_id', 'in', ids)], context=context)\n"
"\n"
"    _columns = {\n"
"        'option_id' : fields.many2one('product.variant.dimension.option', 'Option', required=True),\n"
"        'sequence' : fields.integer('Sequence'),\n"
"        'price_extra' : fields.float('Sale Price Extra', digits_compute=dp.get_precision('Sale Price')),\n"
"        'price_margin' : fields.float('Sale Price Margin', digits_compute=dp.get_precision('Sale Price')),\n"
"        'cost_price_extra' : fields.float('Cost Price Extra', digits_compute=dp.get_precision('Purchase Price')),\n"
"        'dimension_id' : fields.related('option_id', 'dimension_id', type=\"many2one\", relation=\"product.variant.dimension.type\", string=\"Dimension Type\", store=True),\n"
"        'product_tmpl_id': fields.many2one('product.template', 'Product Template', ondelete='cascade'),\n"
"        'dimension_sequence': fields.related('dimension_id', 'sequence', string=\"Related Dimension Sequence\",#used for ordering purposes in the \"variants\"\n"
"             store={\n"
"                'product.variant.dimension.type': (_get_dimension_values, ['sequence'], 10),\n"
"            }),\n"
"        'product_ids': fields.many2many('product.product', 'product_product_dimension_rel', 'dimension_id', 'product_id', 'Variant', readonly=True),\n"
"        'active' : fields.boolean('Active?', help=\"If false, this value will be not use anymore for generating variant"
msgstr "The value %s is use in the product : %s \n"
" Please remove this products before removing the value\"%(value.option_id.name, product_list)))\n"
"        return super(product_variant_dimension_value, self).unlink(cr, uid, ids, context)\n"
"\n"
"    def _get_dimension_values(self, cr, uid, ids, context={}):\n"
"        return self.pool.get('product.variant.dimension.value').search(cr, uid, [('dimension_id', 'in', ids)], context=context)\n"
"\n"
"    _columns = {\n"
"        'option_id' : fields.many2one('product.variant.dimension.option', 'Option', required=True),\n"
"        'sequence' : fields.integer('Sequence'),\n"
"        'price_extra' : fields.float('Sale Price Extra', digits_compute=dp.get_precision('Sale Price')),\n"
"        'price_margin' : fields.float('Sale Price Margin', digits_compute=dp.get_precision('Sale Price')),\n"
"        'cost_price_extra' : fields.float('Cost Price Extra', digits_compute=dp.get_precision('Purchase Price')),\n"
"        'dimension_id' : fields.related('option_id', 'dimension_id', type=\"many2one\", relation=\"product.variant.dimension.type\", string=\"Dimension Type\", store=True),\n"
"        'product_tmpl_id': fields.many2one('product.template', 'Product Template', ondelete='cascade'),\n"
"        'dimension_sequence': fields.related('dimension_id', 'sequence', string=\"Related Dimension Sequence\",#used for ordering purposes in the \"variants\"\n"
"             store={\n"
"                'product.variant.dimension.type': (_get_dimension_values, ['sequence'], 10),\n"
"            }),\n"
"        'product_ids': fields.many2many('product.product', 'product_product_dimension_rel', 'dimension_id', 'product_id', 'Variant', readonly=True),\n"
"        'active' : fields.boolean('Active?', help=\"If false, this value will be not use anymore for generating variant"

#. module: product_variant_multi
#: help:product.variant.dimension.type,sequence:0
msgid "The product 'variants' code will use this to order the dimension values"
msgstr "The product 'variants' code will use this to order the dimension values"

#. module: product_variant_multi
#: model:ir.actions.act_window,name:product_variant_multi.product_variant
#: model:ir.ui.menu,name:product_variant_multi.menu_variant
msgid "Product Variants"
msgstr "Product Variants"

#. module: product_variant_multi
#: view:product.template:0
#: field:product.template,value_ids:0
msgid "Dimension Values"
msgstr "Dimension Values"

#. module: product_variant_multi
#: help:product.product,total_weight:0
msgid "The gross weight in Kg."
msgstr "The gross weight in Kg."

#. module: product_variant_multi
#: model:ir.actions.act_window,name:product_variant_multi.action_dimension_type
#: model:ir.ui.menu,name:product_variant_multi.menu_variant_dimension_types
msgid "Dimension types"
msgstr "Dimension types"

#. module: product_variant_multi
#: help:product.variant.dimension.type,allow_custom_value:0
msgid "If true, custom values can be entered in the product configurator"
msgstr "If true, custom values can be entered in the product configurator"

#. module: product_variant_multi
#: field:product.variant.dimension.value,dimension_sequence:0
msgid "Related Dimension Sequence"
msgstr "Related Dimension Sequence"

#. module: product_variant_multi
#: view:product.product:0
msgid "Variant Weights"
msgstr "Variant Weights"

#. module: product_variant_multi
#: model:ir.ui.menu,name:product_variant_multi.menu_variant_dimension
msgid "Variant dimensions"
msgstr "Variant dimensions"

#. module: product_variant_multi
#: field:product.product,name:0
msgid "Name"
msgstr "Name"

#. module: product_variant_multi
#: model:ir.actions.act_window,name:product_variant_multi.product_template
#: model:ir.ui.menu,name:product_variant_multi.menu_template
msgid "Product Templates"
msgstr "Product Templates"

#. module: product_variant_multi
#: field:product.template,is_multi_variants:0
msgid "Is Multi Variants?"
msgstr "Is Multi Variants?"

#. module: product_variant_multi
#: field:product.variant.dimension.value,cost_price_extra:0
msgid "Cost Price Extra"
msgstr "Cost Price Extra"

#. module: product_variant_multi
#: field:product.template,variant_model_name_separator:0
msgid "Variant Model Name Separator"
msgstr "Variant Model Name Separator"

#. module: product_variant_multi
#: field:product.template,variant_track_outgoing:0
msgid "Track Outgoing Lots on variants ?"
msgstr "Track Outgoing Lots on variants ?"

#. module: product_variant_multi
#: help:product.product,additional_weight_net:0
msgid "The additional net weight in Kg."
msgstr "The additional net weight in Kg."

#. module: product_variant_multi
#: model:ir.model,name:product_variant_multi.model_product_variant_dimension_value
#: field:product.variant.dimension.option,name:0
msgid "Dimension Value"
msgstr "Dimension Value"

#. module: product_variant_multi
#: model:ir.model,name:product_variant_multi.model_product_template
#: field:product.variant.dimension.type,product_tmpl_id:0
#: field:product.variant.dimension.value,product_tmpl_id:0
msgid "Product Template"
msgstr "Product Template"

#. module: product_variant_multi
#: field:product.product,additional_weight:0
msgid "Additional Gross weight"
msgstr "Additional Gross weight"

#. module: product_variant_multi
#: field:product.template,variant_model_name:0
msgid "Variant Model Name"
msgstr "Variant Model Name"

#. module: product_variant_multi
#: model:ir.actions.act_window,name:product_variant_multi.act_product_variant_multi_product_products
msgid "Products"
msgstr "Products"

#. module: product_variant_multi
#: view:product.product:0
msgid "Template Weights"
msgstr "Template Weights"

#. module: product_variant_multi
#: model:ir.module.module,shortdesc:product_variant_multi.module_meta_information
msgid "Products with multi-level variants"
msgstr "Products with multi-level variants"

#. module: product_variant_multi
#: view:product.product:0
msgid "Product Variant"
msgstr "Product Variant"

#. module: product_variant_multi
#: help:product.template,code_generator:0
msgid "enter the model for the product code, all parameter between [_o.my_field_] will be replace by the product field. Example product_code model : prefix_[_o.variants_]_suffixe ==> result : prefix_2S2T_suffix"
msgstr "enter the model for the product code, all parameter between [_o.my_field_] will be replace by the product field. Example product_code model : prefix_[_o.variants_]_suffixe ==> result : prefix_2S2T_suffix"

#. module: product_variant_multi
#: field:product.template,variant_track_incoming:0
msgid "Track Incoming Lots on variants ?"
msgstr "Track Incoming Lots on variants ?"

#. module: product_variant_multi
#: field:product.variant.dimension.type,name:0
msgid "Dimension"
msgstr "Dimension"

#. module: product_variant_multi
#: model:ir.actions.act_window,name:product_variant_multi.action_dimension_value
#: view:product.variant.dimension.value:0
msgid "Dimension values"
msgstr "Dimension values"

#. module: product_variant_multi
#: field:product.variant.dimension.value,option_id:0
msgid "Option"
msgstr "Option"

#. module: product_variant_multi
#: field:product.product,total_weight:0
msgid "Gross weight"
msgstr "Gross weight"

#. module: product_variant_multi
#: field:product.variant.dimension.option,code:0
msgid "Code"
msgstr "Code"

#. module: product_variant_multi
#: field:product.variant.dimension.option,sequence:0
#: field:product.variant.dimension.type,sequence:0
#: field:product.variant.dimension.value,sequence:0
msgid "Sequence"
msgstr "Sequence"

#. module: product_variant_multi
#: view:product.product:0
msgid "Total Weights"
msgstr "Total Weights"

#. module: product_variant_multi
#: help:product.template,variant_model_name_separator:0
msgid "Add a separator between the elements of the variant name"
msgstr "Add a separator between the elements of the variant name"

#. module: product_variant_multi
#: model:ir.actions.act_window,name:product_variant_multi.action_dimension_option
#: model:ir.ui.menu,name:product_variant_multi.menu_variant_dimension_option
#: view:product.variant.dimension.option:0
msgid "Dimension Options"
msgstr "Dimension Options"

#. module: product_variant_multi
#: constraint:product.product:0
msgid "Error: Invalid ean code"
msgstr "Error: Invalid ean code"

#. module: product_variant_multi
#: model:ir.module.module,description:product_variant_multi.module_meta_information
msgid "OpenERP is already supporting a product variants at the core level. But\n"
"without this module, variants are only mono-axial. OpenERP indeed uses the product.tempate\n"
"as the model object and the product.variant as the instance variant.\n"
"Using this module, you can now easily deal with multi-axial variants.\n"
"A product.template, now has a set of dimensions (like Color, Size, anything you want).\n"
"For each dimension, a product.template has a set of dimension values (like Red, Green\n"
"for the Color dimension). For each dimension, you can accept or not custom dimension\n"
"values. The sale interface product configurator will take it into account.\n"
"Once the product.template is set up, you can use a 'generator' button that will populate\n"
"the space of the variants. You could also choose to populate only some combinations\n"
"by hand instead.\n"
"Each variant can have an extra price that will be taken into account when computing\n"
"the base listed price. Yet to be implemented: a price extra per variant dimension value.\n"
"Finally, this module is better used along with the product_variant_configurator which\n"
"will help the salesman selecting the appropriate variant in the sale order line\n"
"using dimension criteria instead of having to crawl the full space of variants.\n"
"    "
msgstr "OpenERP is already supporting a product variants at the core level. But\n"
"without this module, variants are only mono-axial. OpenERP indeed uses the product.tempate\n"
"as the model object and the product.variant as the instance variant.\n"
"Using this module, you can now easily deal with multi-axial variants.\n"
"A product.template, now has a set of dimensions (like Color, Size, anything you want).\n"
"For each dimension, a product.template has a set of dimension values (like Red, Green\n"
"for the Color dimension). For each dimension, you can accept or not custom dimension\n"
"values. The sale interface product configurator will take it into account.\n"
"Once the product.template is set up, you can use a 'generator' button that will populate\n"
"the space of the variants. You could also choose to populate only some combinations\n"
"by hand instead.\n"
"Each variant can have an extra price that will be taken into account when computing\n"
"the base listed price. Yet to be implemented: a price extra per variant dimension value.\n"
"Finally, this module is better used along with the product_variant_configurator which\n"
"will help the salesman selecting the appropriate variant in the sale order line\n"
"using dimension criteria instead of having to crawl the full space of variants.\n"
"    "

#. module: product_variant_multi
#: help:product.product,total_volume:0
msgid "The volume in m3."
msgstr "The volume in m3."

#. module: product_variant_multi
#: model:ir.model,name:product_variant_multi.model_product_variant_dimension_type
#: field:product.variant.dimension.option,dimension_id:0
#: field:product.variant.dimension.value,dimension_id:0
msgid "Dimension Type"
msgstr "Dimension Type"

#. module: product_variant_multi
#: view:product.product:0
msgid "Price"
msgstr "Price"

#. module: product_variant_multi
#: model:ir.model,name:product_variant_multi.model_product_variant_dimension_option
#: field:product.variant.dimension.type,option_ids:0
msgid "Dimension Option"
msgstr "Dimension Option"

