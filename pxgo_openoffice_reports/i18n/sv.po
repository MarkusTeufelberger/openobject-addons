# Translation of OpenERP Server.
# This file contains the translation of the following modules:
#	* pxgo_openoffice_reports
#
msgid ""
msgstr ""
"Project-Id-Version: OpenERP Server 5.0.14\n"
"Report-Msgid-Bugs-To: support@openerp.com\n"
"POT-Creation-Date: 2010-11-22 10:19:32+0000\n"
"PO-Revision-Date: 2010-11-22 10:19:32+0000\n"
"Last-Translator: <>\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: \n"
"Plural-Forms: \n"

#. module: pxgo_openoffice_reports
#: model:ir.module.module,description:pxgo_openoffice_reports.module_meta_information
msgid "Pexego OpenOffice Reports - Reporting Engine based on Relatorio and OpenOffice.\n"
"\n"
"Reporting engine that uses OpenOffice and Relatorio to create reports from several kind of templates (like an OpenDocument Text, a Microsoft Excel spreadsheet, or even a PowerPoint!) \n"
"and export them on several formats (i.e.: it may create a Microsoft Excel spreadsheet from a OpenDocument spreadshet template).\n"
"\n"
"Based on Relatorio (see http://relatorio.openhex.org/), PyODConverter (http://www.artofsolving.com/opensource/pyodconverter) and the Jasper Reports addon from Koo (https://code.launchpad.net/openobject-client-kde).\n"
"\n"
"\n"
"*** FEATURES ***\n"
"\n"
"- The next template formats and output formats are supported:\n"
"  * Text (any text format supported by OpenOffice like odt, doc, rtf, txt): \n"
"        pdf, html, odt, doc (MS Word 97), rtf, txt\n"
"  * Web (hmtl): \n"
"        pdf, odt\n"
"  * Spreadsheet (ods, xls): \n"
"        pdf, html, ods, xls (MS Excel 97), csv\n"
"  * Presentation (odp, ppt): \n"
"        pdf, html, odp, ppt\n"
"  * Drawing (odg): \n"
"        pdf, swf\n"
"\n"
"- Subreports (inserting another file anywhere on the document) are supported for text formats,\n"
"  they are recursive (will be processed by the template system and may have their own subreports)\n"
"  and they can be loaded from a binary field.\n"
"  \n"
"- Dynamic insertion of images is supported too, and they can be loaded from a file or a binary field.\n"
"\n"
"- Conditional statements (if) and repetitive structures (for) are supported. And they can be used in tables.\n"
"\n"
"\n"
"*** TEMPLATE LANGUAGE ***\n"
"\n"
"Templates are based on Relatorio and Genshi, you might find useful this introduction to Relatorio: http://relatorio.openhex.org/wiki/IndepthIntroduction\n"
"\n"
"Some additional features, mainly related to OpenERP, where added:\n"
"\n"
"    - Support for subreports (text documents only).\n"
"        * From OpenObject binary fields:\n"
"            ${ subreport(object.file_field, object.filename_field) }\n"
"        * From files on disk:\n"
"            ${ subreport(filepath='/tmp/something.odt') }\n"
"        * From buffers (open files, strings):\n"
"            ${ subreport(source=buffer, source_format='odt') }\n"
"\n"
"    - Translations using the OpenERP translation engine:\n"
"        ${ _(\"Object Name\") }\n"
"\n"
"    - Access to attachments of an OpenObject:\n"
"        * Get the attachment names:\n"
"            ${ ', '.join([a.name for a in get_attachments(object)]) }\n"
"        * Use the first attachment as a subreport (only text documents):\n"
"            ${ subreport(get_attachments(object)[0].datas, get_attachments(object)[0].datas_fname) }\n"
"\n"
"    - Using images from fields:\n"
"        * On a frame name (see Relatorio documentation about including images),\n"
"            instead of \"image: (file, mimetype)'\",\n"
"            use \"image: ${ field_to_image(object.field) }\"\n"
"\n"
"\n"
"*** REQUIREMENTS ***\n"
"\n"
"- Relatorio (0.5.0 or better) for basic templating (odt->odt and ods->ods only),\n"
"- OpenOffice (3.0 or better) and PyUno for file conversions and subreports.\n"
"- Python Imaging Library (PIL) if you want to use images from binary fields.\n"
"- PyCha (3.0 or better) if you want to use charts.\n"
"\n"
"        "
msgstr "Pexego OpenOffice Reports - Reporting Engine based on Relatorio and OpenOffice.\n"
"\n"
"Reporting engine that uses OpenOffice and Relatorio to create reports from several kind of templates (like an OpenDocument Text, a Microsoft Excel spreadsheet, or even a PowerPoint!) \n"
"and export them on several formats (i.e.: it may create a Microsoft Excel spreadsheet from a OpenDocument spreadshet template).\n"
"\n"
"Based on Relatorio (see http://relatorio.openhex.org/), PyODConverter (http://www.artofsolving.com/opensource/pyodconverter) and the Jasper Reports addon from Koo (https://code.launchpad.net/openobject-client-kde).\n"
"\n"
"\n"
"*** FEATURES ***\n"
"\n"
"- The next template formats and output formats are supported:\n"
"  * Text (any text format supported by OpenOffice like odt, doc, rtf, txt): \n"
"        pdf, html, odt, doc (MS Word 97), rtf, txt\n"
"  * Web (hmtl): \n"
"        pdf, odt\n"
"  * Spreadsheet (ods, xls): \n"
"        pdf, html, ods, xls (MS Excel 97), csv\n"
"  * Presentation (odp, ppt): \n"
"        pdf, html, odp, ppt\n"
"  * Drawing (odg): \n"
"        pdf, swf\n"
"\n"
"- Subreports (inserting another file anywhere on the document) are supported for text formats,\n"
"  they are recursive (will be processed by the template system and may have their own subreports)\n"
"  and they can be loaded from a binary field.\n"
"  \n"
"- Dynamic insertion of images is supported too, and they can be loaded from a file or a binary field.\n"
"\n"
"- Conditional statements (if) and repetitive structures (for) are supported. And they can be used in tables.\n"
"\n"
"\n"
"*** TEMPLATE LANGUAGE ***\n"
"\n"
"Templates are based on Relatorio and Genshi, you might find useful this introduction to Relatorio: http://relatorio.openhex.org/wiki/IndepthIntroduction\n"
"\n"
"Some additional features, mainly related to OpenERP, where added:\n"
"\n"
"    - Support for subreports (text documents only).\n"
"        * From OpenObject binary fields:\n"
"            ${ subreport(object.file_field, object.filename_field) }\n"
"        * From files on disk:\n"
"            ${ subreport(filepath='/tmp/something.odt') }\n"
"        * From buffers (open files, strings):\n"
"            ${ subreport(source=buffer, source_format='odt') }\n"
"\n"
"    - Translations using the OpenERP translation engine:\n"
"        ${ _(\"Object Name\") }\n"
"\n"
"    - Access to attachments of an OpenObject:\n"
"        * Get the attachment names:\n"
"            ${ ', '.join([a.name for a in get_attachments(object)]) }\n"
"        * Use the first attachment as a subreport (only text documents):\n"
"            ${ subreport(get_attachments(object)[0].datas, get_attachments(object)[0].datas_fname) }\n"
"\n"
"    - Using images from fields:\n"
"        * On a frame name (see Relatorio documentation about including images),\n"
"            instead of \"image: (file, mimetype)'\",\n"
"            use \"image: ${ field_to_image(object.field) }\"\n"
"\n"
"\n"
"*** REQUIREMENTS ***\n"
"\n"
"- Relatorio (0.5.0 or better) for basic templating (odt->odt and ods->ods only),\n"
"- OpenOffice (3.0 or better) and PyUno for file conversions and subreports.\n"
"- Python Imaging Library (PIL) if you want to use images from binary fields.\n"
"- PyCha (3.0 or better) if you want to use charts.\n"
"\n"
"        "

